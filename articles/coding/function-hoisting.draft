draft: true
body: |
  Should you declare your functions before you use them, or afterwards? Might sound strange, or obvious, if you've not thought about this before! Actually there's a bit to it.

  In English we read top to bottom. A well structured piece of writing will start with the most important information, and then get to the messy details later.

  Why wouldn't we want our programs to read like that too? For instance:

        main();

        function main() {
          configureUsers();
          installDatabase();
          // ... more top-level commands
        }

        function configureUsers() {
          addUser('amy');
          addUser('bob');
        } 

        function installDatabase() {
          installPackage('postgres');
        }

        function addUser(name) {
          // ...linux arcana
        }

        function installPackage(name) {
          // ...linux arcana
        }

        

  Here can read the program from top to bottom, and at a glace we get an idea of what it does. Configures the users, then installs the database, etc.

  The *what* is immediately obvious; the *how* is relegated further down the file.

  ## The Problems

  So - why wouldn't we want this? 

  ### Function/variable dependencies

  One challenge is the difference in how functions and variables can be hoisted. Functions declarations can be both initialized as variables, and defined, throughout their scope without complications. Variables however must be initialzed with a value at the particular place they exist in the source code ot be meaningful.

  ### Navigation

  Consider what happens if you're reading `installDatabase`. If the example were real, and the file was larger than your screen, you'd not actually know which direction to look for the definition of `installPackage`? It could be defined before or after the function in question.

  Why not use your editior's 'jump to definition'? That works when you're editing in a nicely setup IDE or text-editor. Sometimes you're navigating around in Github etc, or you're too lazy to have setup the right plugin in Vim (me).

